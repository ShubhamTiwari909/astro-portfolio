---
import { cn } from "../lib/utils";

export interface Props {
  class?: string;
}

const { class: className, ...rest } = Astro.props;

const skillCategories = [
  {
    title: "Frontend",
    icon: `<svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
      <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd" />
    </svg>`,
    bgGradient: "from-blue-500 to-blue-600",
    skills: [
      { name: "HTML", percentage: 95, gradient: "from-orange-500 to-orange-600" },
      { name: "CSS", percentage: 95, gradient: "from-blue-500 to-blue-600" },
      {
        name: "JavaScript",
        percentage: 95,
        gradient: "from-yellow-500 to-yellow-600",
      },
      {
        name: "TypeScript",
        percentage: 88,
        gradient: "from-blue-500 to-blue-600",
      },
      {
        name: "Tailwind CSS",
        percentage: 92,
        gradient: "from-cyan-500 to-cyan-600",
      },
      { name: "React", percentage: 95, gradient: "from-blue-500 to-blue-600" },
      {
        name: "Next.js",
        percentage: 85,
        gradient: "from-slate-500 to-slate-600",
      },
      { name: "Astro", percentage: 80, gradient: "from-orange-400 to-orange-500" },
      {
        name: "Vue.js",
        percentage: 70,
        gradient: "from-green-500 to-green-600",
      },
    ],
  },
  {
    title: "Backend",
    icon: `<svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
      <path fill-rule="evenodd" d="M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
    </svg>`,
    bgGradient: "from-purple-500 to-purple-600",
    skills: [
      {
        name: "Node.js",
        percentage: 90,
        gradient: "from-green-500 to-green-600",
      },
      {
        name: "MongoDB",
        percentage: 75,
        gradient: "from-green-500 to-green-600",
      },
      {
        name: "Express",
        percentage: 80,
        gradient: "from-green-500 to-green-600",
      },
      {
        name: "Payload CMS",
        percentage: 85,
        gradient: "from-slate-500 to-slate-600",
      },
      {
        name: "Sanity CMS",
        percentage: 80,
        gradient: "from-pink-500 to-pink-600",
      },
      {
        name: "REST API",
        percentage: 85,
        gradient: "from-violet-500 to-violet-600",
      },
    ],
  },
  {
    title: "Tools & Others",
    icon: `<svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 20 20">
      <path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd" />
    </svg>`,
    bgGradient: "from-pink-500 to-pink-600",
    skills: [
      {
        name: "Git",
        percentage: 95,
        gradient: "from-orange-500 to-orange-600",
      },
      { name: "Docker", percentage: 60, gradient: "from-cyan-500 to-cyan-600" },
      { name: 'Vercel', percentage: 80, gradient: "from-gray-500 to-gray-600" },
      { name: "Figma", percentage: 85, gradient: "from-purple-500 to-purple-600" },
      { name: 'AI', percentage: 90, gradient: "from-slate-500 to-slate-600" },
      { name: 'Linting & Formatting', percentage: 90, gradient: "from-violet-500 to-violet-600" },
      { name: 'Testing (Playwright)', percentage: 80, gradient: "from-sky-500 to-sky-600" },
      { name: 'Performance Optimization', percentage: 80, gradient: "from-emerald-500 to-emerald-600" },
      { name: 'Accessibility', percentage: 80, gradient: "from-amber-500 to-amber-600" },
      { name: 'SEO', percentage: 80, gradient: "from-green-500 to-green-600" },
    ],
  },
];
---

<section
  id="skills"
  class={cn("py-20 bg-gray-50 dark:bg-gray-800", className)}
  {...rest}
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-5xl font-bold mb-4">
        <span
          class="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent"
        >
          Skills & Technologies
        </span>
      </h2>
      <p class="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
        Technologies and tools I use to bring ideas to life
      </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {
        skillCategories.map((category) => (
          <div class="bg-white dark:bg-gray-900 rounded-xl p-6 shadow-lg hover:shadow-xl transition-shadow duration-300">
            <div class="flex items-center mb-4">
              <div
                class={`w-12 h-12 bg-gradient-to-r ${category.bgGradient} rounded-lg flex items-center justify-center mr-4`}
              >
                <Fragment set:html={category.icon} />
              </div>
              <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
                {category.title}
              </h3>
            </div>
            <div class="space-y-3">
              {category.skills.map((skill) => (
                <div class="flex justify-between items-center">
                  <span class="text-gray-600 dark:text-gray-300">
                    {skill.name}
                  </span>
                  <div class="w-24 bg-gray-200 dark:bg-gray-700 rounded-full h-2">
                    <div
                      class={`bg-gradient-to-r ${skill.gradient} h-2 rounded-full`}
                      style={`width: ${skill.percentage}%`}
                    />
                  </div>
                </div>
              ))}
            </div>
          </div>
        ))
      }
    </div>
  </div>
</section>
